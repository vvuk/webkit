diff --git a/Source/cmake/FindCairo.cmake b/Source/cmake/FindCairo.cmake
index d0130ad52f5..ba620342113 100644
--- a/Source/cmake/FindCairo.cmake
+++ b/Source/cmake/FindCairo.cmake
@@ -35,6 +35,7 @@ find_path(CAIRO_INCLUDE_DIRS
     NAMES cairo.h
     HINTS ${PC_CAIRO_INCLUDEDIR}
           ${PC_CAIRO_INCLUDE_DIRS}
+          ${WEBKIT_LIBRARIES_INCLUDE_DIR}
     PATH_SUFFIXES cairo
 )
 
@@ -42,6 +43,7 @@ find_library(CAIRO_LIBRARIES
     NAMES cairo
     HINTS ${PC_CAIRO_LIBDIR}
           ${PC_CAIRO_LIBRARY_DIRS}
+          ${WEBKIT_LIBRARIES_LINK_DIR}
 )
 
 if (CAIRO_INCLUDE_DIRS)
diff --git a/Source/cmake/WebKitCommon.cmake b/Source/cmake/WebKitCommon.cmake
index b0ae5140f8a..72adca75896 100644
--- a/Source/cmake/WebKitCommon.cmake
+++ b/Source/cmake/WebKitCommon.cmake
@@ -27,10 +27,13 @@ if (NOT HAS_RUN_WEBKIT_COMMON)
     # We cannot check for RUBY_FOUND because it is set only when the full package is installed and
     # the only thing we need is the interpreter. Unlike Python, cmake does not provide a macro
     # for finding only the Ruby interpreter.
-    find_package(Ruby 1.9)
-    if (NOT RUBY_EXECUTABLE OR RUBY_VERSION VERSION_LESS 1.9)
-        message(FATAL_ERROR "Ruby 1.9 or higher is required.")
+    if (NOT RUBY_EXECUTABLE)
+        set(RUBY_EXECUTABLE ruby.exe)
     endif ()
+#    find_package(Ruby 1.9)
+#    if (NOT RUBY_EXECUTABLE OR RUBY_VERSION VERSION_LESS 1.9)
+#        message(FATAL_ERROR "Ruby 1.9 or higher is required.")
+#    endif ()
 
     # -----------------------------------------------------------------------------
     # Helper macros and feature defines
